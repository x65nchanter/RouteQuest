// Generated by Dagger (https://dagger.dev).
package com.example.routequest.routing;

import com.example.routequest.routing.data.DistanceResolver;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoutingModule_DistanceProviderFactory implements Factory<DistanceResolver> {
  @Override
  public DistanceResolver get() {
    return distanceProvider();
  }

  public static RoutingModule_DistanceProviderFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static DistanceResolver distanceProvider() {
    return Preconditions.checkNotNullFromProvides(RoutingModule.INSTANCE.distanceProvider());
  }

  private static final class InstanceHolder {
    private static final RoutingModule_DistanceProviderFactory INSTANCE = new RoutingModule_DistanceProviderFactory();
  }
}
